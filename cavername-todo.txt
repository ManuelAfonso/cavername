===== 0000 - Diversos =====
Acrescentar o atributo lang na tag <html lang="en-US"> - 
Acrescentar <meta charset="iso-8859-1" /> na CAVERNAME_HEAD_ZONE - atualmente está em htmlhead.html

===== 0001 - Cache e draft =====
Código antigo encontra-se comentado. É necessário voltar a analisar.
Como gerar os ficheiros cache, tendo em conta também os parâmetros adicionais? Teria que ser pelo URL? Não se pode  
fazer cache a página inteira, por idioma, porque pode haver um conteúdo que seja sempre dinâmico.

===== 0002 - Tags por fechar =====
A visualização de excertos pode deixar tags por fechar se a macro [!readmore] for escrita dentro de um parágrafo (<p>[!readmore]</p>). 
O browser mostra bem o conteúdo da página, mas a página não é validada em http://validator.w3.org/check?uri=referer

===== 0003 - Mensagens na sessão =====
Lista de mensagens guardada na sessão. Isto será necessário para apresentar mensagens criadas num script que faz 
um redirect: header(“Location ... e que devam ser apresentadas na "página" destino.
Criar zona especial (como no caso do debug)

===== 0004 - Acrescentar conteúdo a uma zona dinamicamente =====
Seria útil para acrescentar linhas na zona CAVERNAME_HEAD_ZONE quando um conteúdo precisa de linkar alguma folha de estilos os script.
Para outras zonas pode ser prejudicial porque o nome da zona fica a ser referenciado diretamente no conteudo... mas tem a vantagem de 
simplificar a definição das páginas poupando uma regra.
Se a necessidade for apenas relativa à CAVERNAME_HEAD_ZONE, o sistema podia extrair obter esses dados automaticamente das 
tags tags style, script e link. Ver 0020.

===== 0005 - Bread crumbs =====

===== 0006 - Excertos - melhoria =====
Às vezes dava jeito escolher uma parte do texto para o excerto que não é necessariamente o princípio... 
Para já, está-se a fazer isto repetindo o texto numa div especial...

===== 0007 - AJAX =====
Para artigos com paginação ou capítulos.

===== 0008 - Página para forçar download de ficheiros (pode ser uma função como a public static function FatalError =====
Não pode escrever mais nada, não pode passar pelo template.
<?php
$ficheiro = isset($_GET['ficheiro']) ? $_GET['ficheiro']: 'xxxxxx';
if( file_exists($ficheiro) )
{
	$parts = pathinfo($ficheiro);
	$nome = basename($ficheiro); 
	$extensao = $parts['extension'];
	header('Expires: ' . gmdate('D, d M Y H:i:s') . ' GMT');
	switch ($parts['extension'])
	{
		case 'zip':
			header("Content-Type: application/x-zip");
			break;
		case 'pdf':
			header("Content-Type: application/pdf");
			break;	
		default:
			header("Content-Type: application/force-download");
	}
	header("Cache-Control: ");// leave blank to avoid IE errors
	header("Pragma: ");// leave blank to avoid IE errors
	header("Content-Disposition: attachment; filename=" . $nome );
	header("Content-Transfer-Encoding: binary");
	@readfile($ficheiro); // Outputs a file
}
?>

===== 0009 - Folder index =====
Índice automático com os artigos de um folder (e sub-folders)
Um folder poderia ser considerado como uma categoria. 
Devia existir uma forma de dar uma descrição amigável para cada diretoria (por idioma)

===== 0010 - Indíce e conteúdo na mesma página =====
Como apresentar, na mesma página, o índice e o conteúdo na página certa?
<--chapterIndex ID--> e <!--include ID--> não vai funcionar porque o link do chapterIndex
aponta para o próprio documento.

===== 0011 - RSS =====
Gerar o XML e apresentar o link.
Processar um feed e mostrar.

===== 0012 - multicoluna (bootstrap) =====
Com column breaks no texto.

===== 0013 - mudar idioma (implica lista de) =====

===== 0014 - mudar de tema (implica lista de) =====

===== 0015 - macro para Syntax Highlighter =====

===== 0016 - módulo de notícias com SQLite =====
1 notícia
Últimas N notícias (de N a N) - excertos
RSS feed das últimas notícias
Tag list e tag cloud

===== 0017 - ADMIN =====
Alias para login 'cavername-login' => '@CavernameUser:Login'
Menu Admin 'cavername-admin' => '@CavernameAdmin:Menu'
Lista de conteúdos com base nos ficheiros da pasta conteudos @CavernameAdmin:ContentBrowser
   sitemap - a partir de um conteúdo consegue-se ir buscar todos os links recursivamente (fazer como nos headings)
Broken links (internos)
Conteúdos orfãos (não referenciadas)
get-folder-size.php
backup?
@CavernameAdmin:Logout

===== 0018 - Media e arquivos =====
Definir uma pasta para media e arquivos. 
Os conteúdos poderiam referenciar esta pasta, em vez de usarem caminhos relativos, sempre que desejassem.
Criar macros específicas para ir buscar esses itens (src="" A HREF="") e link para forçar download Ver 0008.

===== 0019 - Traduções lado a lado com editor inline =====
http://www.yvoschaap.com/weblog/ajax_inline_instant_update_text_20
Dividir por parágrafos.

===== 0020 - janela modal para vídeos =====
Ver se os vídeos podem abrir numa janela modal e estudar como o fazer dentro de um conteúdo, para que a div 
fique “fora” dos outros elementos... sem usar PHP – macro para incluir determinado conteúdo numa zona especial... 
podia ser outro conteúdo, na verdade é uma alternativa a abrir noutra página. <!--modal id--> Ver 0004

===== 0021 - book & booklist =====
booklist (gerada dinamicamente) e 
book (ficheiro com metadados) - talvez o Template deste conteúdo possa ser definido pela extensão .book
Para incorporar o código da página e-book, mas com mais informação e uma imagem.
(formulário de edição?)

===== 0022 - Trusted List =====
Aceitar [pasta/*] 

===== 0023 - Menu principal e outros componentes =====
Arranjar uma forma de definir um menu  de modo que apenas sejam indicados (títulos) e (destinos), evitando
a utilização direta das classes bootstrap no conteúdo. ver navigation.htm
Pode definir um template para menus e convencionar uma forma de o definir. Depois existirá um ficheiro no tema
para o formatar.

===== 0024 - Utilizadores =====
Fazer os métodos necessários para carregar o seu conteúdo a partir de um ficheiro.
Não é necessário guardar passwords, a autenticação será feita via Google ou similares.

    // function IsLogin()
    // {
        // return (true === $utilizador_valido);
    // }
	public static function Login()
	{
	/*
	login => ?a=@CavernameUser.Login&method=Google
	se este endereço for chamado com um "botão" dentro do sistema, deve levar também o url atual
					?a=@CavernameUser:Login&method=Google&rd=<valor de a atual>&<restantes parâmetros>
					Atenção! o uso do cardinal do URL não funciona, é preciso usar o ALIAS					
	Vai ao Google (Open ID)
	Depois vai voltar aqui, procura user em Cavername-db e guarda dados na sessão.
	Em todos os casos cria uma mensagem (sucesso ou insucesso)
	Finalmente, faz o redirect para home ou para o url anterior se estiver definido
	
	Porque é que precisa de fazer o redirect? Não bastaria carregar os dados do utilizador e substituir 
	o conteúdo da zona principal?
	Porque quando chegar a este código já estará no ciclo de preenchimento de conteúdos. Se houver 
	conteúdos que dependam do user, já não ficariam corretos. Por isso, o melhor é redirecionar.
	*/	
	}
